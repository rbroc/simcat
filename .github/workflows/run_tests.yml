name: Run test suite  
  
on: [push]  
  
jobs:  
  build:  
    runs-on: ubuntu-latest  
    strategy:  
      matrix:  
        python-version: ["3.8", "3.9", "3.10"]  
  
    steps:  
      - uses: actions/checkout@v3  
      - name: Set up Python ${{ matrix.python-version }}  
        uses: actions/setup-python@v4  
        with:  
          python-version: ${{ matrix.python-version }}  
      - name: Install dependencies  
        run: |  
          python -m pip install --upgrade pip  
          pip install .
      - name: Lint with Black  
        run: |  
          pip install black[jupyter] pytest pytest-cov
          black ./*
        continue-on-error: true  
      - name: Run and write pytest  
        run: |  
          cd tests
          set -o pipefail
          pytest --cov=tomsup --cov-report term-missing | tee pytest-coverage.txt
   - name: Pytest coverage comment
      if: ${{ github.event_name == 'push' }}
      id: coverage-comment
      uses: MishaKav/pytest-coverage-comment@v1.1.43
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        github-token: ${{ secrets.SPHINX_DOCUMENTATION }}
    - name: Check the output coverage
      if: ${{ github.event_name == 'push' }}
      run: |
        echo "Coverage Report - ${{ steps.coverage-comment.outputs.coverage }}"
        echo "Coverage Color - ${{ steps.coverage-comment.outputs.color }}"
    - name: Create the Badge
      if: ${{ github.event_name == 'push' }}
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.PYTEST_COVERAGE_COMMENT }}
        gistID: ba4cb2310c5b370dc2c49d0be0a7e3ec
        filename: badge-tomsup-pytest-coverage.json
        label: Coverage
        message: ${{ steps.coverage-comment.outputs.coverage }}
        color: ${{ steps.coverage-comment.outputs.color }}
        namedLogo: python

      #- name: Generate Coverage Report  
       # run: |  
      #    coverage report -m
